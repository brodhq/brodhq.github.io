{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Menu } from '@ui';\nimport { sortBy } from '@utils';\nimport { MenuNavLink } from 'components/ui/menus/MenuNavLink';\nimport React from 'react';\nexport const GuideMenu = (_ref) => {\n  let {\n    className = '',\n    releases = []\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"releases\"]);\n\n  const [release] = sortBy(releases, 'date', 'desc');\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"space-y-5\",\n    children: [release && /*#__PURE__*/_jsxs(\"a\", {\n      className: \"underline text-xl text-gray-800\",\n      href: \"#\",\n      children: [\"News: \", release.title]\n    }), props.sections.map(section => /*#__PURE__*/_jsx(Menu, {\n      title: section.name,\n      children: section.guides.sort(sorter).map((guide, index) => /*#__PURE__*/_jsxs(\"div\", {\n        className: \"flex text-gray-500\",\n        children: [/*#__PURE__*/_jsxs(\"span\", {\n          className: \"w-2.5\",\n          children: [index + 1, \".\"]\n        }), /*#__PURE__*/_jsx(MenuNavLink, {\n          href: getLink(guide),\n          reverse: true,\n          children: guide.title\n        })]\n      }, guide.slug))\n    }, section.name))]\n  });\n};\n\nconst getLink = guide => `/guides/${guide.slug}`;\n\nconst sorter = (a, b) => a.number > b.number ? 1 : 0;","map":null,"metadata":{},"sourceType":"module"}