{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport NextLink from 'next/link';\nimport classNames from 'classnames';\nimport { useRouter } from 'next/router';\nexport const NavLink = (_ref) => {\n  let {\n    children,\n    href,\n    exact = true,\n    reverse = false,\n    className = ''\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"href\", \"exact\", \"reverse\", \"className\"]);\n\n  const router = useRouter();\n  const match = isMatch(props.match ? props.match : href.toString(), router.asPath, props.match ? false : exact);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: classNames('py-1 px-2 select-none', {\n      [className]: className,\n      'text-gray-500': !match && !reverse || reverse && match,\n      'text-primary-800': match && !reverse || !match && reverse\n    }),\n    children: /*#__PURE__*/_jsx(NextLink, {\n      href: href,\n      children: children\n    })\n  });\n};\n\nconst isMatch = (match, pathname, exact = false) => exact ? match === pathname : pathname.startsWith(match);","map":null,"metadata":{},"sourceType":"module"}