{"pageProps":{"api":{"number":2,"section":"protocols","filename":"02-fetch.md","title":"Fetch","slug":"protocols/fetch","subsections":[{"name":"fetch([type?, url, init[]?, callback?])","slug":"fetchtype-url-init-callback"},{"name":"Fetch options","slug":"fetch-options"}],"content":"<h2 id=overview class=\"prose prose-2xl\">Overview</h2><p class=\"prose\">The fetch protocol is designed for fetching and parsing unstructured data over HTTP.</p><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>\n<span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-title function_\">fetch</span>(url, <span class=\"hljs-function\"><span class=\"hljs-params\">resp</span> =&gt;</span> \n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(resp)\n)</code>\n</pre><h3 id=fetchtype-url-init-callback class=\"prose prose-xl\">fetch([type?, url, init[]?, callback?])</h3><p class=\"prose\">Send a request</p><ul class=\"prose\"><li class=\"p-1 ml-10\"><code>type</code> - Set the expected response data type </li><li class=\"p-1 ml-10\"><code>url</code> - HTTP URL of remote resource</li><li class=\"p-1 ml-10\"><code>init</code> - A list of fetch configurations</li><li class=\"p-1 ml-10\"><code>callback</code> - (optional) an optional callback receiving the response</li></ul><h3 id=fetch-options class=\"prose prose-xl\">Fetch options</h3><p class=\"prose\">The fetch options control the behavior of the fetch object. Note that the options object is deeply cloned (with the exception of <a href=\"#fetch.options.listener\"><code>listener</code></a> which is shallowly copied) and should not contain any values that are unsafe to perform deep copy on.</p><p class=\"prose\">All options are optionals.</p><h4 id=fetchmethodmethod class=\"prose prose-lg\">fetch.method([method])</h4><p class=\"prose\">Set the HTTP method.</p><h5 id=example class=\"prose\">Example</h5><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n  <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>,\n  fetch.<span class=\"hljs-title function_\">method</span>(<span class=\"hljs-string\">&#x27;post&#x27;</span>)\n)</code>\n</pre><h4 id=fetchbodypayload class=\"prose prose-lg\">fetch.body([payload])</h4><p class=\"prose\">Set the HTTP body of the request.</p><h5 id=example-1 class=\"prose\">Example</h5><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n  <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>,\n  fetch.<span class=\"hljs-title function_\">body</span>({\n    <span class=\"hljs-attr\">data</span>: <span class=\"hljs-literal\">true</span>\n  })\n)</code>\n</pre><p class=\"prose\">Default value: <code>&#39;GET&#39;</code>.</p><h4 id=fetchheadername-value class=\"prose prose-lg\">fetch.header([name, value])</h4><p class=\"prose\">Set a HTTP header.</p><h5 id=example-2 class=\"prose\">Example</h5><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n  <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>,\n  fetch.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&#x27;Authorization&#x27;</span>, <span class=\"hljs-string\">&#x27;my token&#x27;</span>)\n)</code>\n</pre>"},"sections":[{"name":"protocols","guides":[{"number":2,"section":"protocols","filename":"02-fetch.md","title":"Fetch","slug":"protocols/fetch"}]},{"name":"data types","guides":[{"number":2,"section":"data-types","filename":"02-json.md","title":"Json","slug":"data-types/json"}]}],"releases":[{"title":"Geis v1.2 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"A case study of how Geis is being used at Farmbot.","tags":"network","slug":"2021-03-20-release-002","date":"2021-03-20"},{"title":"Geis v1.0 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"A case study of how Geis is being used at Farmbot.","tags":"network","slug":"2021-03-18-release-001","date":"2021-03-18"}]},"__N_SSG":true}