{"pageProps":{"api":{"number":2,"section":"protocols","filename":"02-fetch.md","title":"Fetch","slug":"protocols/fetch","subsections":[{"name":"Overview","slug":"overview"},{"name":"fetch([type?, url, init[]?, callback?])","slug":"fetchtype-url-init-callback"},{"name":"Fetch options","slug":"fetch-options"},{"name":"fetch.method([method])","slug":"fetchmethodmethod"},{"name":"fetch.header([name, value])","slug":"fetchheadername-value"},{"name":"Examples","slug":"examples"},{"name":"Simple","slug":"simple"},{"name":"Data extraction","slug":"data-extraction"},{"name":"Custom headers","slug":"custom-headers"}],"content":"<h2 id=overview class=\"prose prose-2xl\">Overview</h2><p class=\"prose\">The fetch protocol is designed for fetching and parsing unstructured data over HTTP.</p><pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>\n<span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-title function_\">fetch</span>(url, <span class=\"hljs-function\"><span class=\"hljs-params\">resp</span> =&gt;</span> \n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(resp)\n)\n</code></pre>\n<h3 id=fetchtype-url-init-callback class=\"prose prose-2xl\">fetch([type?, url, init[]?, callback?])</h3><p class=\"prose\">Send a request</p><ul class=\"prose\"><li class=\"p-1 ml-10\"><code>type</code> - Set the expected response data type </li><li class=\"p-1 ml-10\"><code>url</code> - HTTP URL of remote resource</li><li class=\"p-1 ml-10\"><code>init</code> - A list of fetch configurations</li><li class=\"p-1 ml-10\"><code>callback</code> - (optional) an optional callback receiving the response</li></ul><h3 id=fetch-options class=\"prose prose-2xl\">Fetch options</h3><p class=\"prose\">The fetch options control the behavior of the fetch object. Note that the options object is deeply cloned (with the exception of <a href=\"#fetch.options.listener\"><code>listener</code></a> which is shallowly copied) and should not contain any values that are unsafe to perform deep copy on.</p><p class=\"prose\">All options are optionals.</p><h4 id=fetchmethodmethod class=\"prose prose-2xl\">fetch.method([method])</h4><p class=\"prose\">Set the HTTP method.</p><p class=\"prose\">Default value: <code>&#39;GET&#39;</code>.</p><h4 id=fetchheadername-value class=\"prose prose-2xl\">fetch.header([name, value])</h4><p class=\"prose\">Set a HTTP header.</p><h3 id=examples class=\"prose prose-2xl\">Examples</h3><p class=\"prose\">Example usage of the fetch protocol</p><h4 id=simple class=\"prose prose-2xl\">Simple</h4><p class=\"prose\">A simple request</p><pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">import</span> { fetch, <span class=\"hljs-title class_\">Json</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;krans&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>\n<span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-title class_\">Json</span>, url)\n</code></pre>\n<h4 id=data-extraction class=\"prose prose-2xl\">Data extraction</h4><p class=\"prose\">Extract properties from JSON payload</p><pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">import</span> { fetch, <span class=\"hljs-title class_\">Json</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;krans&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>\n<span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-title class_\">Json</span>, url, <span class=\"hljs-function\">(<span class=\"hljs-params\">{ data }</span>) =&gt;</span> ({\n  <span class=\"hljs-attr\">id</span>: data[<span class=\"hljs-string\">&#x27;id&#x27;</span>].<span class=\"hljs-title function_\">toInteger</span>(),\n  <span class=\"hljs-attr\">title</span>: data[<span class=\"hljs-string\">&#x27;title&#x27;</span>].<span class=\"hljs-title function_\">toString</span>(),\n  <span class=\"hljs-attr\">body</span>: data[<span class=\"hljs-string\">&#x27;body&#x27;</span>].<span class=\"hljs-title function_\">toString</span>()\n}))\n</code></pre>\n<h4 id=custom-headers class=\"prose prose-2xl\">Custom headers</h4><p class=\"prose\">Set request custom headers</p><pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">import</span> { fetch, <span class=\"hljs-title class_\">Json</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;krans&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-string\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>\n<span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n  <span class=\"hljs-title class_\">Json</span>, \n  url,\n  fetch.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&#x27;a header&#x27;</span>, <span class=\"hljs-string\">&#x27;my-applicatin&#x27;</span>),\n  fetch.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&#x27;another header&#x27;</span>, <span class=\"hljs-string\">&#x27;my-applicatin&#x27;</span>)\n)\n</code></pre>\n"},"sections":[{"name":"protocols","guides":[{"number":1,"section":"protocols","filename":"01-introduction.md","title":"Introduction","slug":"protocols/introduction"},{"number":2,"section":"protocols","filename":"02-fetch.md","title":"Fetch","slug":"protocols/fetch"},{"number":3,"section":"protocols","filename":"03-open.md","title":"Open","slug":"protocols/open"}]},{"name":"data types","guides":[{"number":1,"section":"data-types","filename":"01-introduction.md","title":"Introduction","slug":"data-types/introduction"},{"number":2,"section":"data-types","filename":"02-json.md","title":"Json","slug":"data-types/json"},{"number":3,"section":"data-types","filename":"03-html.md","title":"Html","slug":"data-types/html"}]}],"releases":[{"title":"Geis v1.2 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"A case study of how Geis is being used at Farmbot.","tags":"network","slug":"2021-03-20-release-002","date":"2021-03-20"},{"title":"Geis v1.0 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"A case study of how Geis is being used at Farmbot.","tags":"network","slug":"2021-03-18-release-001","date":"2021-03-18"}]},"__N_SSG":true}