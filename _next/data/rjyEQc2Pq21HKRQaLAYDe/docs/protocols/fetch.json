{"pageProps":{"api":{"number":1,"section":"protocols","filename":"01-fetch.md","title":"Fetch","slug":"protocols/fetch","content":"<p class=\"prose\">A set of functions for working with maps.</p><p class=\"prose\">Many functions for maps, which implement the Enumerable protocol, are found in the Enum module. Additionally, the following functions for maps are found in Kernel:</p><p class=\"prose\"><strong>Example</strong></p><div class=\"block text-sm font-small p-4 rounded-lg shadow-md bg-gray-700 text-gray-400\"><pre style=\"display:block;overflow-x:auto;padding:1rem;color:#abb2bf;background:none;text-align:left;background-color:transparent\"><code class=\"language-typescript\" style=\"white-space:pre\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">1</span><span style=\"color:#c678dd\">import</span><span> { fetch } </span><span style=\"color:#c678dd\">from</span><span> </span><span style=\"color:#98c379\">&#x27;@brod/fetch&#x27;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">2</span><span></span><span style=\"color:#c678dd\">import</span><span> { Json } </span><span style=\"color:#c678dd\">from</span><span> </span><span style=\"color:#98c379\">&#x27;@brod/json&#x27;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">3</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">4</span><span></span><span style=\"color:#c678dd\">const</span><span> url = </span><span style=\"color:#98c379\">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">5</span><span></span><span style=\"color:#c678dd\">const</span><span> response = fetch(Json, url, </span><span class=\"hljs-function\">(</span><span class=\"hljs-function hljs-params\">{ data }</span><span class=\"hljs-function\">) =&gt;</span><span> ({\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">6</span><span>     </span><span style=\"color:#d19a66\">id</span><span>: data[</span><span style=\"color:#98c379\">&#x27;id&#x27;</span><span>].toInteger(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">7</span><span>     </span><span style=\"color:#d19a66\">title</span><span>: data[</span><span style=\"color:#98c379\">&#x27;title&#x27;</span><span>].toText(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">8</span><span>     </span><span style=\"color:#d19a66\">completed</span><span>: data[</span><span style=\"color:#98c379\">&#x27;completed&#x27;</span><span>].toBoolean()\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">9</span>}))\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">10</span>response.data === {\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">11</span><span>     </span><span style=\"color:#d19a66\">id</span><span>: </span><span style=\"color:#d19a66\">1</span><span>,\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">12</span><span>     </span><span style=\"color:#d19a66\">title</span><span>: </span><span style=\"color:#98c379\">&#x27;quis ut nam facilis et officia qui&#x27;</span><span>,\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">13</span><span>     </span><span style=\"color:#d19a66\">completed</span><span>: </span><span style=\"color:#56b6c2\">true</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">14</span>}\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">15</span><span></span><span style=\"color:#5c6370;font-style:italic\">// =&gt; true</span></code></pre></div><h2 id=interfaces class=\"prose prose-2xl\">Interfaces</h2><h2 id=fetchfn class=\"prose prose-2xl\">Fetchfn</h2><p class=\"prose\">▸ <strong>FetchFn</strong>(<span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">type</span>, <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">url</span>): <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">AwaitableFetchRequest</span></p><p class=\"prose\">Fetch data at url as JSON</p><p class=\"prose\"><strong>Example</strong></p><div class=\"block text-sm font-small p-4 rounded-lg shadow-md bg-gray-700 text-gray-400\"><pre style=\"display:block;overflow-x:auto;padding:1rem;color:#abb2bf;background:none;text-align:left;background-color:transparent\"><code class=\"language-typescript\" style=\"white-space:pre\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:1.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">1</span><span style=\"color:#c678dd\">const</span><span> response = fetch(Json, </span><span style=\"color:#98c379\">&#x27;https://example.com/posts/1&#x27;</span><span>)\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:1.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">2</span>response.status\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:1.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">3</span><span></span><span style=\"color:#5c6370;font-style:italic\">// =&gt; 200</span></code></pre></div><p class=\"prose\">▸ <strong>FetchFn</strong>(<span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">type</span>, <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">init</span>): <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">AwaitableFetchRequest</span></p><p class=\"prose\">Fetch data at url using request as object properties</p><p class=\"prose\"><strong>Example</strong></p><div class=\"block text-sm font-small p-4 rounded-lg shadow-md bg-gray-700 text-gray-400\"><pre style=\"display:block;overflow-x:auto;padding:1rem;color:#abb2bf;background:none;text-align:left;background-color:transparent\"><code class=\"language-typescript\" style=\"white-space:pre\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">1</span><span style=\"color:#c678dd\">const</span><span> response = fetch(Json, {\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">2</span><span>     </span><span style=\"color:#d19a66\">method</span><span>: </span><span style=\"color:#98c379\">&#x27;get&#x27;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">3</span><span>     </span><span style=\"color:#d19a66\">url</span><span>: </span><span style=\"color:#98c379\">&#x27;https://example.com/posts/1&#x27;</span><span>,\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">4</span>})\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">5</span>response.status\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">6</span><span></span><span style=\"color:#5c6370;font-style:italic\">// =&gt; 200</span></code></pre></div><p class=\"prose\">▸ <strong>FetchFn</strong>(<span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">type</span>, <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">init</span>, <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">callback</span>): <span class=\"text-gray-900 bg-primary-50 border border-primary-100 text-sm font-mono px-1 py-0.5\">AwaitableFetchRequest</span></p><p class=\"prose\">Fetch data at url as JSON and parse response in callback</p><p class=\"prose\"><strong>Example</strong></p><div class=\"block text-sm font-small p-4 rounded-lg shadow-md bg-gray-700 text-gray-400\"><pre style=\"display:block;overflow-x:auto;padding:1rem;color:#abb2bf;background:none;text-align:left;background-color:transparent\"><code class=\"language-typescript\" style=\"white-space:pre\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">1</span><span style=\"color:#c678dd\">const</span><span> response = fetch(\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">2</span>     Json,\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">3</span><span>     </span><span style=\"color:#98c379\">&#x27;https://example.com/posts/1&#x27;</span><span>,\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">4</span><span>     </span><span class=\"hljs-function hljs-params\">response</span><span class=\"hljs-function\"> =&gt;</span><span> ({\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">5</span><span>         </span><span style=\"color:#d19a66\">title</span><span>: response.data[</span><span style=\"color:#98c379\">&#x27;title&#x27;</span><span>].toString(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">6</span><span>         </span><span style=\"color:#d19a66\">content</span><span>: response.data[</span><span style=\"color:#98c379\">&#x27;content&#x27;</span><span>].toString(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">7</span><span>         </span><span style=\"color:#d19a66\">postedAt</span><span>: response.data[</span><span style=\"color:#98c379\">&#x27;date&#x27;</span><span>].toDate()\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">8</span>     })\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">9</span>)\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">10</span>response.title\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:1em;text-align:right;user-select:none;margin-right:0.5rem;opacity:0.3\">11</span><span></span><span style=\"color:#5c6370;font-style:italic\">// =&gt; &#x27;my post&#x27;</span></code></pre></div>","subsections":[{"name":"Fetchfn","slug":"fetchfn"}],"previous":null,"next":{"number":1,"section":"data-types","filename":"01-json.md","title":"Json","slug":"data-types/json"}},"sections":[{"name":"protocols","guides":[{"number":1,"section":"protocols","filename":"01-fetch.md","title":"Fetch","slug":"protocols/fetch"}]},{"name":"data types","guides":[{"number":1,"section":"data-types","filename":"01-json.md","title":"Json","slug":"data-types/json"},{"number":2,"section":"data-types","filename":"02-html.md","title":"Html","slug":"data-types/html"}]}],"releases":[{"title":"Brod v0.1 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"Introducing a new library for data processing and integration in NodeJS.","tags":"network","image":"movie-ready-go.jpg","slug":"release","date":"2021-06-08","content":"\nCommunity is a platform that enables instant and direct communication with the people you want to reach, using the simplicity of text messaging. Used by names like Paul McCartney, Metallica, and Barack Obama, Community connects small businesses, stars, and high-profile individuals directly to their audiences.\n\nCommunity is powered by the Erlang Ecosystem, with Brod and RabbitMQ playing central roles. This article gives an overview of the system and the tools used to handle spikes of million of users caused by events such as this tweet:\n\n## The first steps with Brod\n\nTomas Koci and Ustin Zarubin were the two engineers behind Community’s initial implementation. The company was pivoting from a product they had written in Go and they felt the language was not expressive enough for the products they were building. So when faced with the challenge of developing a social messaging platform on top of SMS, they were open to trying a different stack.\n"}]},"__N_SSG":true}