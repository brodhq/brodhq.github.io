{"pageProps":{"api":{"number":2,"section":"data-types","filename":"02-json.md","title":"Json","slug":"data-types/json","subsections":[{"name":"Json","slug":"json"},{"name":"[Symbol.iterator]","slug":"symboliterator"},{"name":"get","slug":"get"},{"name":"toArray","slug":"toarray"},{"name":"toBoolean","slug":"toboolean"},{"name":"toInteger","slug":"tointeger"},{"name":"toString","slug":"tostring"},{"name":"valueOf","slug":"valueof"}],"content":"<h3 id=json class=\"prose prose-2xl\">Json</h3><p class=\"prose\">▸ <strong>Json</strong>(<code>content?</code>, <code>path?</code>, <code>config?</code>): <a href=\"#jsonpath\">JsonPath</a></p><p class=\"prose\">Constructs a new json path from either a raw string\nor an object</p><p class=\"prose\"><strong><code>example</code></strong></p><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-title class_\">Json</span>(<span class=\"hljs-string\">`{&quot;value&quot;: 5}`</span>).<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;value&#x27;</span>).<span class=\"hljs-title function_\">toInteger</span>()\n<span class=\"hljs-comment\">// =&gt; 5</span></code>\n</pre><h4 id=parameters class=\"prose prose-2xl\">Parameters</h4><table>\n<thead>\n<tr>\n<th align=\"left\">Name</th>\n<th align=\"left\">Type</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>content?</code></td>\n<td align=\"left\"><code>string</code> | <code>object</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>path?</code></td>\n<td align=\"left\"><code>string</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>config?</code></td>\n<td align=\"left\"><code>Partial</code>&lt;JsonConfig&gt;</td>\n</tr>\n</tbody></table>\n<h4 id=returns class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><a href=\"#jsonpath\">JsonPath</a></p><h1 id=interfaces class=\"prose prose-2xl\">Interfaces</h1><h2 id=jsonpath class=\"prose prose-2xl\">Jsonpath</h2><p class=\"prose\">A JsonPath represents a nested selection of\nproperties inside a JSON document</p><h2 id=hierarchy class=\"prose prose-2xl\">Hierarchy</h2><ul class=\"prose\"><li class=\"p-1 ml-10\"><p class=\"prose\"><code>Iterable</code>&lt;<a href=\"#jsonpath\">JsonPath</a>&gt;</p><p class=\"prose\">↳ <strong>JsonPath</strong></p></li></ul><h2 id=methods class=\"prose prose-2xl\">Methods</h2><h3 id=symboliterator class=\"prose prose-2xl\">[Symbol.iterator]</h3><p class=\"prose\">▸ <strong>[Symbol.iterator]</strong>(): <code>Iterator</code>&lt;<a href=\"#jsonpath\">JsonPath</a>, any, undefined&gt;</p><h4 id=returns-1 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><code>Iterator</code>&lt;<a href=\"#jsonpath\">JsonPath</a>, any, undefined&gt;</p><h4 id=inherited-from class=\"prose prose-2xl\">Inherited from</h4><p class=\"prose\">Iterable.__@iterator</p><hr>\n<h3 id=get class=\"prose prose-2xl\">get</h3><p class=\"prose\">▸ <strong>get</strong>(<code>selector</code>): <a href=\"#jsonpath\">JsonPath</a></p><p class=\"prose\">Extract a nested json value</p><p class=\"prose\"><strong><code>example</code></strong></p><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">const</span> json = <span class=\"hljs-title class_\">Json</span>(<span class=\"hljs-string\">`{&quot;value&quot;: 5}`</span>).<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;value&#x27;</span>).<span class=\"hljs-title function_\">toInteger</span>()\n<span class=\"hljs-comment\">// =&gt; 5</span></code>\n</pre><h4 id=parameters-1 class=\"prose prose-2xl\">Parameters</h4><table>\n<thead>\n<tr>\n<th align=\"left\">Name</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>selector</code></td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">A valid jsonpath selector string</td>\n</tr>\n</tbody></table>\n<h4 id=returns-2 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><a href=\"#jsonpath\">JsonPath</a></p><hr>\n<h3 id=toarray class=\"prose prose-2xl\">toArray</h3><p class=\"prose\">▸ <strong>toArray</strong>(): <code>JsonValue</code>[]</p><p class=\"prose\">Returns the current element selection as\nan array of elements</p><p class=\"prose\"><strong><code>example</code></strong></p><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">const</span> values = json.<span class=\"hljs-title function_\">toArray</span>()\n<span class=\"hljs-comment\">// =&gt; [1, 2, 3]</span></code>\n</pre><h4 id=returns-3 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><code>JsonValue</code>[]</p><hr>\n<h3 id=toboolean class=\"prose prose-2xl\">toBoolean</h3><p class=\"prose\">▸ <strong>toBoolean</strong>(): <code>null</code> | <code>boolean</code> | <code>Error</code></p><p class=\"prose\">Return current json value as a boolean</p><h4 id=returns-4 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><code>null</code> | <code>boolean</code> | <code>Error</code></p><hr>\n<h3 id=tointeger class=\"prose prose-2xl\">toInteger</h3><p class=\"prose\">▸ <strong>toInteger</strong>(): <code>null</code> | <code>number</code> | <code>Error</code></p><p class=\"prose\">Return current json value as an integer</p><p class=\"prose\"><strong><code>example</code></strong></p><pre class=\"text-sm font-small p-4 bg-gray-700 text-gray-400 rounded-lg shadow-md\">\n    <code><span class=\"hljs-keyword\">const</span> json = <span class=\"hljs-title class_\">Json</span>(<span class=\"hljs-string\">`{&quot;value&quot;: 5}`</span>, <span class=\"hljs-string\">&#x27;value&#x27;</span>).<span class=\"hljs-title function_\">toInteger</span>()\n<span class=\"hljs-comment\">// =&gt; 5</span>\n<span class=\"hljs-keyword\">const</span> json = <span class=\"hljs-title class_\">Json</span>(<span class=\"hljs-string\">`{&quot;value&quot;: &#x27;not a number&#x27;}`</span>, <span class=\"hljs-string\">&#x27;value&#x27;</span>).<span class=\"hljs-title function_\">toInteger</span>()\n<span class=\"hljs-comment\">// =&gt; Error</span>\n<span class=\"hljs-keyword\">const</span> json = <span class=\"hljs-title class_\">Json</span>(<span class=\"hljs-string\">`{&quot;value&quot;: 5}`</span>, <span class=\"hljs-string\">&#x27;unknown&#x27;</span>).<span class=\"hljs-title function_\">toInteger</span>()\n<span class=\"hljs-comment\">// =&gt; null</span></code>\n</pre><h4 id=returns-5 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><code>null</code> | <code>number</code> | <code>Error</code></p><hr>\n<h3 id=tostring class=\"prose prose-2xl\">toString</h3><p class=\"prose\">▸ <strong>toString</strong>(): <code>null</code> | <code>string</code></p><p class=\"prose\">Return string value</p><h4 id=returns-6 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><code>null</code> | <code>string</code></p><hr>\n<h3 id=valueof class=\"prose prose-2xl\">valueOf</h3><p class=\"prose\">▸ <strong>valueOf</strong>(): <code>object</code> | <code>object</code>[]</p><p class=\"prose\">Unwraps the inner json value</p><h4 id=returns-7 class=\"prose prose-2xl\">Returns</h4><p class=\"prose\"><code>object</code> | <code>object</code>[]</p>"},"sections":[{"name":"protocols","guides":[{"number":2,"section":"protocols","filename":"02-fetch.md","title":"Fetch","slug":"protocols/fetch"}]},{"name":"data types","guides":[{"number":2,"section":"data-types","filename":"02-json.md","title":"Json","slug":"data-types/json"}]}],"releases":[{"title":"Geis v1.2 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"A case study of how Geis is being used at Farmbot.","tags":"network","slug":"2021-03-20-release-002","date":"2021-03-20"},{"title":"Geis v1.0 released","author":"Mads Hargreave","layout":"default","category":"Releases","summary":"A case study of how Geis is being used at Farmbot.","tags":"network","slug":"2021-03-18-release-001","date":"2021-03-18"}]},"__N_SSG":true}